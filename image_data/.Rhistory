88*6.7
library(ISLR)
library(GGally)
library(tidyverse)
library(GGally)
summary(Auto)
attach(Auto)
mpg01 = rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
Auto = data.frame(Auto, mpg01)
cor(Auto[, -9])
ggpairs(Auto)
pairs(Auto)
train = (year%%2 == 0)  # if the year is even
test = !train
Auto.train = Auto[train, ]
Auto.test = Auto[test, ]
mpg01.test = mpg01[test]
summary(Auto)
attach(Auto)
?attacg
?attach
library(ISLR)
library(tidyverse)
library(GGally)
summary(Auto)
mpg01
Auto = data.frame(Auto, mpg01)
Auto
library(ISLR)
library(tidyverse)
library(GGally)
summary(Auto)
attach(Auto)
mpg01 = rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
Auto = data.frame(Auto, mpg01)
Auto
View(Auto.test)
library(ISLR)
library(tidyverse)
library(GGally)
summary(Auto)
attach(Auto)
mpg01 = rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
Auto = data.frame(Auto, mpg01)
Auto
View(Auto)
cor(Auto[, -9])
ggpairs(Auto)
Auto
View(Auto)
ggpairs(Auto[, -9])
ratio = c(0.6, 0.4)
ratio[1]
Auto[1:ratio[1]*row(Auto ]
Auto[1:ratio[1]*row(Auto) ]
Auto[1:ratio[1]*row(Auto), ]
Auto.train = Auto[1:ratio[1]*row(Auto),]
Auto.test = Auto[ratio[1]*row(Auto):row(Auto), ]
Auto[ratio[1]*row(Auto):row(Auto), ]
ratio[1]*row(Auto)
row(Auto)
row(Auto)
Auto
3//2
3/2
int(3/2)
as.integer(3/2)
row(Auto)
dim(Auto)
col(Autp)
col(Auto)
cols(Auto)
col(Auto)
nrow(Autp)
nrow(Auto)
ratio = c(0.6, 0.4)
bdy = as.integer(ratio[1]*nrow(Auto))
Auto.train = Auto[1:bdy,]
Auto.test = Auto[bdy + 1:nrow(Auto), ]
mpg01.test = mpg01[test]
year
Auto
list(test.error = mean(lda.pred$class != mpg01.test))
lda.fit = lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
# Loading packages
library(ISLR)
library(tidyverse)
library(GGally)
library(class)
summary(Auto)
attach(Auto)
mpg01 = rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
Auto = data.frame(Auto, mpg01)
cor(Auto[, -9])
ggpairs(Auto[, -9])
# ratio = c(0.6, 0.4)
# bdy = as.integer(ratio[1]*nrow(Auto))
# Auto.train = Auto[1:bdy,]
# Auto.test = Auto[bdy + 1:nrow(Auto), ]
# mpg01.test = mpg01[test]
train = (year%%2 == 0)  # if the year is even
test = !train
Auto.train = Auto[train, ]
Auto.test = Auto[test, ]
mpg01.test = mpg01[test]
library(MASS)
lda.fit = lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
lda.pred = predict(lda.fit, Auto.test)
list(test.error = mean(lda.pred$class != mpg01.test))
knn.pred
train.X = cbind(cylinders, weight, displacement, horsepower)[train, ]
test.X = cbind(cylinders, weight, displacement, horsepower)[test, ]
train.mpg01 = mpg01[train]
knn.pred = knn(train.X, test.X, train.mpg01, k = 1)
knn.pred
list(test.error = (mean(knn.pred != mpg01.test)))
K_choose <- function(k){
train.X = cbind(cylinders, weight, displacement, horsepower)[train, ]
test.X = cbind(cylinders, weight, displacement, horsepower)[test, ]
train.mpg01 = mpg01[train]
knn.pred = knn(train.X, test.X, train.mpg01, k = k)
test.error = (mean(knn.pred != mpg01.test))
return(test.error)
}
K_choose(1)
K_choose(10)
K_choose(100)
result = data.frame(K = 1:200, test.error)
result = data.frame(K = 1:200, test.error = 0)
result
result = data.frame(K = 1:200, test.error = 0)
for (i in 1:200) {
once = K_choose(i)
result[i, 2] = once
}
show(result)
min(result$test.error)
result[result$test.error == min(result$test.error)]
result$test.error == min(result$test.error)
result[result$test.error == min(result$test.error),]
test
train
Auto.train = Auto[train, ]
Auto.test = Auto[-test, ]
test = -train
test
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(vcd)
library(GGally)
setwd("~/Documents/UC Berkeley/ML/project/project2/image_data")
data1 <- read.table('image1.txt')
data2 <- read.table('image2.txt')
data3 <- read.table('image3.txt')
## change the colnames
col_names <- c('y' , 'x', 'expert_label', 'NDAI', 'SD', 'CORR', 'DF', 'CF', 'BF', 'AF', 'AN')
colnames(data1) <- col_names
colnames(data2) <- col_names
setwd("~/Documents/UC Berkeley/ML/project/project2/image_data")
data1 <- read.table('image1.txt')
data2 <- read.table('image2.txt')
data3 <- read.table('image3.txt')
## change the colnames
col_names <- c('y' , 'x', 'expert_label', 'NDAI', 'SD', 'CORR', 'DF', 'CF', 'BF', 'AF', 'AN')
setwd("~/Documents/UC Berkeley/ML/project/project2/image_data")
data1 <- read.table('image1.txt')
data1 <- read.table('image1.txt')
data2 <- read.table('image2.txt')
library(tidyverse)
library(vcd)
library(GGally)
setwd("~/Documents/UC Berkeley/ML/project/project2/image_data")
data1 <- read.table('image1.txt')
data2 <- read.table('image2.txt')
data3 <- read.table('image3.txt')
## change the colnames
col_names <- c('y' , 'x', 'expert_label', 'NDAI', 'SD', 'CORR', 'DF', 'CF', 'BF', 'AF', 'AN')
